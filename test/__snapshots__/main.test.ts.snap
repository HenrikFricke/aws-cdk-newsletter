// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Mappings": Object {
    "ServiceprincipalMap": Object {
      "af-south-1": Object {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": Object {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": Object {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": Object {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": Object {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": Object {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-southeast-1": Object {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": Object {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": Object {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ca-central-1": Object {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": Object {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": Object {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": Object {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-north-1": Object {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": Object {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": Object {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": Object {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": Object {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": Object {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "me-south-1": Object {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": Object {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": Object {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": Object {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": Object {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": Object {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-west-1": Object {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": Object {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Outputs": Object {
    "ApiEndpoint": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "ApiNewsletterApiED899079",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "ApiNewsletterApiDeploymentStageprodF898551A",
            },
            "/",
          ],
        ],
      },
    },
    "ApiNewsletterApiEndpoint5C468236": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "ApiNewsletterApiED899079",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "ApiNewsletterApiDeploymentStageprodF898551A",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ApiApiIntegrationRoleD67A9B83": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiApiIntegrationRoleDefaultPolicyF9652ABC": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "states:SendTaskSuccess",
                "states:SendTaskFailure",
                "states:SendTaskHeartbeat",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "StateMachineNewsletter669F4611",
              },
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "StateMachineNewsletter669F4611",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiApiIntegrationRoleDefaultPolicyF9652ABC",
        "Roles": Array [
          Object {
            "Ref": "ApiApiIntegrationRoleD67A9B83",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiNewsletterApiAccountFD80A6E8": Object {
      "DependsOn": Array [
        "ApiNewsletterApiED899079",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "ApiNewsletterApiCloudWatchRole4030F873",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "ApiNewsletterApiCloudWatchRole4030F873": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiNewsletterApiDeploymentCA99A4B2a9d34b8554db3fc9debad39686d60038": Object {
      "DependsOn": Array [
        "ApiNewsletterApiconfirmGET3772EA83",
        "ApiNewsletterApiconfirm577A2102",
        "ApiNewsletterApisubscribePOSTA4AE1D5D",
        "ApiNewsletterApisubscribe53AD229B",
        "ApiNewsletterApiunsubscribePOST40842F58",
        "ApiNewsletterApiunsubscribe53A561F3",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "ApiNewsletterApiED899079",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiNewsletterApiDeploymentStageprodF898551A": Object {
      "DependsOn": Array [
        "ApiNewsletterApiAccountFD80A6E8",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "ApiNewsletterApiDeploymentCA99A4B2a9d34b8554db3fc9debad39686d60038",
        },
        "RestApiId": Object {
          "Ref": "ApiNewsletterApiED899079",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiNewsletterApiED899079": Object {
      "Properties": Object {
        "Name": "NewsletterApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiNewsletterApiconfirm577A2102": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ApiNewsletterApiED899079",
            "RootResourceId",
          ],
        },
        "PathPart": "confirm",
        "RestApiId": Object {
          "Ref": "ApiNewsletterApiED899079",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiNewsletterApiconfirmGET3772EA83": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "ApiApiIntegrationRoleD67A9B83",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "
                  #set ($type = $input.params('type'))
                  #if( $input.path('$.message') == \\"Task Timed Out: 'Provided task does not exist anymore'\\" )
                    #set($context.responseOverride.header.location = \\"https://example.com/expired\\")
                  #elseif( $type == 'subscribe' )
                    #set($context.responseOverride.header.location = \\"https://example.com/subscribed\\")
                  #elseif( $type == 'unsubscribe' )
                    #set($context.responseOverride.header.location = \\"https://example.com/unsubscribed\\")
                  #else
                    #set($context.responseOverride.header.location = \\"https://example.com/ohno\\")
                  #end
                ",
              },
              "StatusCode": "301",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{\\"taskToken\\":\\"$util.base64Decode($input.params('token'))\\",\\"output\\":\\"{}\\"}",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":states:action/SendTaskSuccess",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "301",
          },
        ],
        "ResourceId": Object {
          "Ref": "ApiNewsletterApiconfirm577A2102",
        },
        "RestApiId": Object {
          "Ref": "ApiNewsletterApiED899079",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiNewsletterApisubscribe53AD229B": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ApiNewsletterApiED899079",
            "RootResourceId",
          ],
        },
        "PathPart": "subscribe",
        "RestApiId": Object {
          "Ref": "ApiNewsletterApiED899079",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiNewsletterApisubscribePOSTA4AE1D5D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "ApiApiIntegrationRoleD67A9B83",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "{\\"ok\\":true}",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"stateMachineArn\\":\\"",
                  Object {
                    "Ref": "StateMachineNewsletter669F4611",
                  },
                  "\\",\\"input\\":\\"{\\\\\\"email\\\\\\":\\\\\\"$input.params('email')\\\\\\",\\\\\\"confirmationEndpoint\\\\\\":\\\\\\"https://$context.domainName/$context.stage/confirm\\\\\\",\\\\\\"type\\\\\\":\\\\\\"$context.resourcePath.substring(1)\\\\\\"}\\"}",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":states:action/StartExecution",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "ApiNewsletterApisubscribe53AD229B",
        },
        "RestApiId": Object {
          "Ref": "ApiNewsletterApiED899079",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiNewsletterApiunsubscribe53A561F3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ApiNewsletterApiED899079",
            "RootResourceId",
          ],
        },
        "PathPart": "unsubscribe",
        "RestApiId": Object {
          "Ref": "ApiNewsletterApiED899079",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiNewsletterApiunsubscribePOST40842F58": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "ApiApiIntegrationRoleD67A9B83",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": Array [
            Object {
              "ResponseTemplates": Object {
                "application/json": "{\\"ok\\":true}",
              },
              "StatusCode": "200",
            },
          ],
          "RequestTemplates": Object {
            "application/json": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"stateMachineArn\\":\\"",
                  Object {
                    "Ref": "StateMachineNewsletter669F4611",
                  },
                  "\\",\\"input\\":\\"{\\\\\\"email\\\\\\":\\\\\\"$input.params('email')\\\\\\",\\\\\\"confirmationEndpoint\\\\\\":\\\\\\"https://$context.domainName/$context.stage/confirm\\\\\\",\\\\\\"type\\\\\\":\\\\\\"$context.resourcePath.substring(1)\\\\\\"}\\"}",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":states:action/StartExecution",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "ApiNewsletterApiunsubscribe53A561F3",
        },
        "RestApiId": Object {
          "Ref": "ApiNewsletterApiED899079",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "StateMachineNewsletter669F4611": Object {
      "DependsOn": Array [
        "StateMachineNewsletterRoleDefaultPolicy6C7D08C3",
        "StateMachineNewsletterRole93DB247E",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"GetEmail\\",\\"States\\":{\\"GetEmail\\":{\\"Next\\":\\"IsValidRequest?\\",\\"Type\\":\\"Task\\",\\"ResultPath\\":\\"$.emailItem\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:getItem\\",\\"Parameters\\":{\\"Key\\":{\\"email\\":{\\"S.$\\":\\"$.email\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "StorageNewsletterTableC41800D3",
              },
              "\\",\\"ConsistentRead\\":false}},\\"IsValidRequest?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Or\\":[{\\"And\\":[{\\"Variable\\":\\"$.type\\",\\"StringEquals\\":\\"subscribe\\"},{\\"Variable\\":\\"$.emailItem.Item\\",\\"IsPresent\\":false}]},{\\"And\\":[{\\"Variable\\":\\"$.type\\",\\"StringEquals\\":\\"unsubscribe\\"},{\\"Variable\\":\\"$.emailItem.Item\\",\\"IsPresent\\":true}]}],\\"Next\\":\\"SendEmailConfirmation\\"}],\\"Default\\":\\"Do nothing\\"},\\"Do nothing\\":{\\"Type\\":\\"Pass\\",\\"End\\":true},\\"SendEmailConfirmation\\":{\\"Next\\":\\"SubscribeOrUnsubscribe?\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Type\\":\\"Task\\",\\"HeartbeatSeconds\\":86400,\\"ResultPath\\":\\"$.sendEmailConfirmation\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke.waitForTaskToken\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "StateMachineemailConfirmation5D262A06",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":{\\"email.$\\":\\"$.email\\",\\"confirmationEndpoint.$\\":\\"$.confirmationEndpoint\\",\\"token.$\\":\\"$$.Task.Token\\",\\"type.$\\":\\"$.type\\"}}},\\"SubscribeOrUnsubscribe?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.type\\",\\"StringEquals\\":\\"subscribe\\",\\"Next\\":\\"Subscribe\\"},{\\"Variable\\":\\"$.type\\",\\"StringEquals\\":\\"unsubscribe\\",\\"Next\\":\\"Unsubscribe\\"}]},\\"Subscribe\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem\\",\\"Parameters\\":{\\"Item\\":{\\"email\\":{\\"S.$\\":\\"$.email\\"},\\"createdAt\\":{\\"S.$\\":\\"$$.State.EnteredTime\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "StorageNewsletterTableC41800D3",
              },
              "\\"}},\\"Unsubscribe\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:deleteItem\\",\\"Parameters\\":{\\"Key\\":{\\"email\\":{\\"S.$\\":\\"$.email\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "StorageNewsletterTableC41800D3",
              },
              "\\"}}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "StateMachineNewsletterRole93DB247E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "StateMachineNewsletterRole93DB247E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StateMachineNewsletterRoleDefaultPolicy6C7D08C3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:GetItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "StorageNewsletterTableC41800D3",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "StateMachineemailConfirmation5D262A06",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "StorageNewsletterTableC41800D3",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "dynamodb:DeleteItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "StorageNewsletterTableC41800D3",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StateMachineNewsletterRoleDefaultPolicy6C7D08C3",
        "Roles": Array [
          Object {
            "Ref": "StateMachineNewsletterRole93DB247E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StateMachineemailConfirmation5D262A06": Object {
      "DependsOn": Array [
        "StateMachineemailConfirmationServiceRoleDefaultPolicy50E12080",
        "StateMachineemailConfirmationServiceRole408259FB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a010438706896d2fad37c3c7d90d9215d63ff5859976d7a7c321264945beee08.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "FROM_EMAIL_ADDRESS": "henrikfricke@web.de",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "StateMachineemailConfirmationServiceRole408259FB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "StateMachineemailConfirmationServiceRole408259FB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StateMachineemailConfirmationServiceRoleDefaultPolicy50E12080": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ses:SendEmail",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ses:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":identity/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StateMachineemailConfirmationServiceRoleDefaultPolicy50E12080",
        "Roles": Array [
          Object {
            "Ref": "StateMachineemailConfirmationServiceRole408259FB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StorageNewsletterTableC41800D3": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "email",
            "AttributeType": "S",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "email",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
